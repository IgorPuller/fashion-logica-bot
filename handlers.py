from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes
from yandex_gpt import ask_yandex_gpt
import os

reply_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton("–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ")]],
    resize_keyboard=True,
    one_time_keyboard=False
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-—Å—Ç–∏–ª–∏—Å—Ç üëó",
        reply_markup=reply_keyboard
    )
    await update.message.reply_text(
        "–ö—Ç–æ —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç?",
        reply_markup=inline_keyboard
    )

inline_keyboard = InlineKeyboardMarkup([
    [InlineKeyboardButton("üëó –ò–ò —Å—Ç–∏–ª–∏—Å—Ç", callback_data="ai_stylist")],
    [InlineKeyboardButton("üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ", callback_data="upload_photo")],
    [InlineKeyboardButton("üí¨ –ñ–∏–≤–æ–π —á–µ–ª–æ–≤–µ–∫", url="https://t.me/igorpuller")]
])

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "ai_stylist":
        await query.edit_message_text("–í—ã–±—Ä–∞–Ω –ò–ò —Å—Ç–∏–ª–∏—Å—Ç. –û–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ üëá")
        #await query.edit_message_text("–í—ã–±—Ä–∞–Ω –ò–ò —Å—Ç–∏–ª–∏—Å—Ç. –û–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ üëá", reply_markup=ForceReply())
    elif query.data == "upload_photo":
        await query.edit_message_text("–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ –æ–¥–µ–∂–¥—ã, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å üì∏")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî –≤—ã–∑–æ–≤ GPT
async def handle_user_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    prompt = update.message.text
    #await update.message.reply_text("–ü–æ–¥—É–º–∞—é –Ω–∞–¥ —Ç–≤–æ–∏–º –æ–±—Ä–∞–∑–æ–º... üëó")

    try:
        response = ask_yandex_gpt(prompt)
        #await update.message.reply_text(response)
        await update.message.reply_text(response, reply_markup=reply_keyboard)
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò.")
        print("YandexGPT error:", e)

from fashionclip_handler import process_photo

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    photo = update.message.photo[-1]
    file = await context.bot.get_file(photo.file_id)
    file_path = f"temp_photo_{update.message.from_user.id}.jpg"
    await file.download_to_drive(file_path)

    try:
        result = process_photo(file_path)
        await update.message.reply_text(f"üß† –í–æ—Ç —á—Ç–æ —è –¥—É–º–∞—é:\n{result}")
    except Exception as e:
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
        print("FashionCLIP error:", e)

    os.remove(file_path)
